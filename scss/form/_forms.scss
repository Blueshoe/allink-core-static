/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

Default Form Styles

*/

.form-default {

    // only in markup if columns are used
    .col-container {
        @include make-row();
    }

    // column variations: applied to `form-group` container
    .col-1-1 {
        .col {
            @include make-xs-column(24);
            @include make-sm-column(12);
            @include make-spacing-top-xs-max($form-label-spacing-xs);
        }
        @media (min-width:$screen-sm) {
            .col-1 { padding-right: $grid-gutter-width/4; }
            .col-2 { padding-left: $grid-gutter-width/4; }
        }
    }

    // form group (= form row)
    .form-group {
        margin: 0;
        & + .form-group {
            margin-top: $form-group-spacing-xs;
            @media (min-width:$screen-md) {
                margin-top: $form-group-spacing-md;
            }
            @media (min-width:$screen-xl) {
                margin-top: $form-group-spacing-xl;
            }
        }
    }

    // the default label
    .control-label {
        display: inline-block;
        max-width: 100%;
        margin: 0;
        margin-bottom: $form-label-spacing-xs;
        @media (min-width:$screen-md) {
            margin-bottom: $form-label-spacing-md;
        }
        @media (min-width:$screen-xl) {
            margin-bottom: $form-label-spacing-xl;
        }
        @if $form-label-bold-enabled == true {
            @include font-family-bold();
        }
    }

    // the label text container
    label,
    .label-text {
        display: inline-block;
        font-weight: normal;

    }

    // error label
    .has-error {
        label,
        .label-text {
            color: $form-label-error-color;
        }
    }

    // error messages
    .errorlist {
        margin-top: $form-field-error-spacing-xs;
        @media (min-width:$screen-md) {
            margin-top: $form-field-error-spacing-md;
        }
        @media (min-width:$screen-xl) {
            margin-top: $form-field-error-spacing-xl;
        }
        > li {
            @include p-small();
            color: $form-field-error-color;
        }
    }

    // prepare the required symbol
    .required-symbol {
        display: inline-block;
        width: $form-field-required-icon-width;
        height: $form-field-required-icon-height;
        overflow: hidden;
        visibility: hidden;
        &:before {
            content: $form-field-required-icon;
            color: $form-field-required-icon-color;
            visibility: visible;
            @if $form-field-required-icomoon-enabled == true {
                @include icomoon();
            }
        }
    }

}
