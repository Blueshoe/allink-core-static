// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

@mixin button-variant($color, $background, $border) {
    color: $color;
    background-color: $background;
    border-color: $border;

    &:focus,
    &.focus {
        color: $color;
        background-color: darken($background, 10%);
        border-color: darken($border, 25%);
    }
    &:hover {
        color: $color;
        background-color: darken($background, 10%);
        border-color: darken($border, 12%);
    }
    &:active,
    &.active,
    .open > &.dropdown-toggle {
        color: $color;
        background-color: darken($background, 10%);
        border-color: darken($border, 12%);

        &:hover,
        &:focus,
        &.focus {
            color: $color;
            background-color: darken($background, 17%);
            border-color: darken($border, 25%);
        }
    }
    &:active,
    &.active,
    .open > &.dropdown-toggle {
        background-image: none;
    }
    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        &:hover,
        &:focus,
        &.focus {
            background-color: $background;
            border-color: $border;
        }
    }

    .badge {
        color: $background;
        background-color: $color;
    }
}

// Button sizes
@mixin button-size($padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius) {
    padding: $padding-vertical $padding-horizontal;
    font-size: $font-size;
    line-height: $line-height;
    border-radius: $border-radius;
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

Get a specific button variation on the spot

===

How to use:

.some-link {
    @include button-variation('primary');
}

*/

@mixin button-variation($variation: 'default') {
    // base styles
    transition: $form-field-transition;
    display: inline-block;
    // variation styles
    background-color: map-deep-get($btn-variations,$variation,'bg');
    border-top-color: map-deep-get($btn-variations,$variation,'border-top-color');
    border-right-color: map-deep-get($btn-variations,$variation,'border-right-color');
    border-bottom-color: map-deep-get($btn-variations,$variation,'border-bottom-color');
    border-left-color: map-deep-get($btn-variations,$variation,'border-left-color');
    &,
    &:link,
    &:visited {
        color: map-deep-get($btn-variations,$variation,'color');
        // in case there are icons defined with pseude elements, let's give them the same color
        &::before,
        &::after {
            color: map-deep-get($btn-variations,$variation,'color');
        }
    }
    &:hover,
    &:focus,
    &:focus:active,
    &:active,
    &:active:hover {
        background-color: map-deep-get($btn-variations,$variation,'bg-hover');
        color: map-deep-get($btn-variations,$variation,'color-hover');
        border-top-color: map-deep-get($btn-variations,$variation,'border-top-color-hover');
        border-right-color: map-deep-get($btn-variations,$variation,'border-right-color-hover');
        border-bottom-color: map-deep-get($btn-variations,$variation,'border-bottom-color-hover');
        border-left-color: map-deep-get($btn-variations,$variation,'border-left-color-hover');
        outline: none; // not very good because of accessibility reasons, but the default style looks too ugly.
        // in case there are icons defined with pseude elements, let's give them the same color
        &::before,
        &::after {
            color: map-deep-get($btn-variations,$variation,'color-hover');
        }
    }
    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        opacity: 1;
        background-color: map-deep-get($btn-variations,$variation,'bg-disabled');
        color: map-deep-get($btn-variations,$variation,'color-disabled');
        border-top-color: map-deep-get($btn-variations,$variation,'border-top-color-disabled');
        border-right-color: map-deep-get($btn-variations,$variation,'border-right-color-disabled');
        border-bottom-color: map-deep-get($btn-variations,$variation,'border-bottom-color-disabled');
        border-left-color: map-deep-get($btn-variations,$variation,'border-left-color-disabled');
    }
}


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

Get the base styles for a button

*/

@mixin button-base() {

    border-radius: $btn-border-radius-base;
    cursor: pointer;

    &,
    &:link,
    &:visited {
        text-decoration: none;
        box-shadow: none;
        transition: $btn-transition;
    }
    &:hover,
    &:focus,
    &:active {
        text-decoration: none;
        box-shadow: none;
        outline: none;
    }
    // font sizes
    @include font-btn-default();
    &.btn-sm {
        @include font-btn-small();
        // make sure our button has the correct lineheight
        line-height: $btn-line-height;
        border-radius: $btn-border-radius-small;
    }
    &.btn-lg {
        @include font-btn-large();
        // make sure our button has the correct lineheight
        line-height: $btn-line-height;
        border-radius: $btn-border-radius-large;
    }

    // IMPORTANT: Has to be set AFTER the font definition, for we ignore the line-height defined in the font settings of buttons
    border-style: $form-field-border-style;
    border-width: $form-field-border-width;
    border-color: $form-field-border-color;

    // set paddings
    padding-top: $btn-padding-top;
    padding-right: $btn-padding-right;
    padding-bottom: $btn-padding-bottom;
    padding-left: $btn-padding-left;
    line-height: $btn-line-height;
}
