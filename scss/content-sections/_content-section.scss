/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

Default Content Section Styles

*/

// default content section spacings and general styles
.content-section {

    // in case a background image is set
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;

    // default: using margin
    @include content-section-spacing-margin();

    // special spacing: container has a background COLOR
    &.has-bg-color {
        margin-top: 0;
        margin-bottom: 0;
        @include content-section-spacing-padding();
    }

    // special spacing: container has a background IMAGE
    &.has-bg-image {
        margin-top: 0;
        margin-bottom: 0;
        @include content-section-spacing-padding();
    }

    // special spacing: container has a background VIDEO
    &.has-bg-video {
        margin: 0;
        padding: 0;
        &:first-child,
        &:last-child {
            padding: 0;
        }
    }

    // the background color variations and manage spacing
    &.has-bg-color {
        @each $nr, $color in $project-colors {
            &.project-color-#{$nr} {
                background-color: $color;
                & + .project-color-#{$nr} {
                    padding-top: 0;
                }
            }

        }
    }

    // global container settings
    &.container-enabled {
        .content-section__container {
            @include container-fixed();
            @include max-width();
        }
    }

    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

    Options (via checkboxes or generated by conditions)

    */

    &.container-enabled {
        .content-section__inner {
            @include make-row();
            // on XS we have a smaller column padding
            @include make-row-sm-max();
        }
    }


    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

    Parallax

    */

    &.parallax-enabled {
        overflow: hidden;
        position: relative;
        padding: 0;
        // apply min-height only IF the full height mode is NOT active
        &:not(.full-height-enabled) {
            @include aspect-ratio($parallax-aspect-ratio-width-xs,$parallax-aspect-ratio-height-xs);
            @media (min-width:$screen-md) {
                @include aspect-ratio($parallax-aspect-ratio-width-md,$parallax-aspect-ratio-height-md);
            }
            @media (min-width:$screen-xl) {
                @include aspect-ratio($parallax-aspect-ratio-width-xl,$parallax-aspect-ratio-height-md);
                // has to be set AFTER the ratio mixin
                max-height: $parallax-max-height;
            }
        }
        .content-section__main-col-container {
            position: absolute;
            left: 0;
            right: 0;
            @include content-section-spacing-position();
        }
    }

    &__bg-image {
        background-repeat: no-repeat;
        height: $parallax-bg-image-height;
        width: 100%;
        background-size: cover;
        background-position: center;
        position: absolute;
        left: 0;
        top: 0;
    }


    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

    Overlay Enabled

    */

    &.overlay-enabled {
        position: relative;
        // set overlay text colors
        .content-section__section-heading {
            color: $overlay-heading-color;
        }
        .text-container {
            > * {
                color: $overlay-text-color;
            }
        }
    }

    // element only exists, if an OUTER background image has been defined
    &__outer-overlay {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        @include gradient-overlay(50%);
        @media (max-width:$screen-sm-max) {
            background-color: $overlay-background-color-sm-max;
            opacity: $overlay-background-opacity-sm-max;
        }
    }
    // element only exists, if an INNER background image has been defined
    &__inner-overlay {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        @include gradient-overlay(66%);
    }


    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

    INNER container background image

    */

    &.inner-container-has-bg-image {
        .content-section__inner {
            margin: 0;
            position: relative;
        }
        .content_section__bg-image-inner {
            background-repeat: no-repeat;
            background-size: cover;
            background-position: center;
            @include aspect-ratio($content-plugin-inner-bg-container-ratio-width-xs,$content-plugin-inner-bg-container-ratio-height-xs);
            @media (min-width:$screen-md) {
                @include aspect-ratio($content-plugin-inner-bg-container-ratio-width-md,$content-plugin-inner-bg-container-ratio-height-md);
            }
            @media (min-width:$screen-xl) {
                @include aspect-ratio($content-plugin-inner-bg-container-ratio-width-xl,$content-plugin-inner-bg-container-ratio-height-md);
            }
        }
        .content-section__inner-overlay {
            display: none;
            @media (min-width:$screen-md) {
                display: block;
            }
        }
        .content-section__main-text-container {
            @media (min-width:$screen-md) {
                position: absolute;
                @include content-section-spacing-position(bottom);
                @include content-section-spacing-position(left);
                @include content-section-spacing-position(right);
            }
        }
        // reset overlay spacings and colors on mobile
        @media (max-width:$screen-sm-max) {
            // specificy wars.. damn it..
            .content-section__col-container {
                .content-section__col-container-inner {
                    .content-section__col {
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                        &.col-order-mobile-0 {
                            margin-top: $content-section-heading-spacing-xs;
                        }
                    }
                }
            }
            // reset heading padding
            .content-section__section-heading {
                padding-left: 0 !important;
                padding-right: 0 !important;
            }
            // let's pretend we're in a manage-spacings context
            .content-section__main-text-container {
                @include make-spacing-top-xs($manage-spacings-container-xs);
                @include make-spacing-top-md($manage-spacings-container-md);
                @include make-spacing-top-xl($manage-spacings-container-xl);
            }
            &.section-heading-h1 {
                .content-section__section-heading {
                    color: $h1-color;
                }
            }
            &.section-heading-h2 {
                .content-section__section-heading {
                    color: $h2-color;
                }
            }
            &.section-heading-h3 {
                .content-section__section-heading {
                    color: $h3-color;
                }
            }
            .text-container {
                > * {
                    color: $body-color;
                }
            }
        }
    }


    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

    Background Video

    */

    &.has-bg-video {

        position: relative;

        // min heights for mobile image
        @media (max-width:$screen-sm-max) {
            @include aspect-ratio($content-plugin-video-mobile-image-ratio-width,$content-plugin-video-mobile-image-ratio-height);
        }

        .content-section__main-col-container {
            position: absolute;
            left: 0;
            right: 0;
            @include content-section-spacing-position();
        }

        // default: display the video proportionally
        .content-section__video-container {
            background-size: cover;
            background-position: center center;
            overflow: hidden;

            @media (max-width:$screen-sm-max) {
                position: absolute;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;
            }

            &.align-right {
                background-position: center right;
            }
            &.align-left {
                background-position: center left;
            }
            .the-video {
                display: none;
                @media (min-width: $screen-md ) {
                    display: block;
                    width: 100% !important;
                    height: auto !important;
                }
            }
        }

        // full height: center video in full height mode
        &.full-height-enabled {
            position: relative;
            width: 100%;
            .content-section__video-container {
                position: absolute;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;
                .the-video {
                    @media (min-width: $screen-md ) {
                        display: block;
                        position: absolute;
                        top: 50%;
                        left: 50%;
                        min-width: 100%;
                        min-height: 100%;
                        width: auto !important;
                        height: auto !important;
                        transform: translate(-50%,-50%);
                    }
                }
            }
        }

    }

    // using the available height
    &.full-height-enabled {
        position: relative;
        .content-section__main-col-container {
            position: absolute;
            left: 0;
            right: 0;
            @include content-section-spacing-position();
        }
        // magic
        @if $site-header-fixed-use-buffer == true and $site-header-fixed-enabled == true {
            min-height: calc(100vh - #{$site-header-height-xs});
            @media (min-width:$screen-md) {
                min-height: calc(100vh - #{$site-header-height-md});
            }
            @media (min-width:$screen-xl) {
                min-height: calc(100vh - #{$site-header-height-xl});
            }
            @media (min-width:$screen-xxl) {
                min-height: calc(100vh - #{$site-header-height-xxl});
            }
        }
        // fallback
        @else {
            min-height: 100vh;
        }
    }


    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

    Within Modal

    */

    // reset container max-width within modal
    .tingle-modal & {
        .content-section__container {
            max-width: none;
        }
    }


    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

    FLEXBOX Time!

    */

    .content-section__col-container-inner {
        display: flex;
        flex-wrap: wrap;
    }

    // Mobile Column Ordering.. Flexbox to the rescue!
    // Note: Currently only up to 3 colum templates are supported
    @media (max-width:$screen-sm-max) {
        .col-order-mobile-0 { order: 0; }
        .col-order-mobile-1 { order: 1; }
        .col-order-mobile-2 { order: 2; }
        // .col-order-mobile-3 { order: 3; }
        // .col-order-mobile-4 { order: 4; }
        // .col-order-mobile-5 { order: 5; }
    }

    // vertical alignment
    @media (min-width:$screen-md) {
        .align-v-desktop-top {  align-self: flex-start; }
        .align-v-desktop-middle {  align-self: center; }
        .align-v-desktop-bottom {  align-self: flex-end; }
    }


    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

    Column Definitions

    */

    // on small screens, we don't want empty columns to be displayed
    .col-empty {
        @media (max-width:$screen-sm-max) {
            display: none;
        }
    }

    .content-section__col-container {
        @include clearfix();
    }

    &__template__col-1 {
        // overflow: hidden; // The negativ margin of the make-row() mixin causes the content to overflow. Let's hide it.
        .content-section__col {
            @include make-xs-column(24);
        }
    }

    &__template__col-1-1 {
        @include content-plugin-col-mobile-flexbox();
        @include content-plugin-col-mobile-flexbox-spacing-fix();
        .content-section__col {
            @include make-spacing-top-sm-max($content-section-col-stack-spacing-sm-max);
            @include make-xs-column(24);
            @include make-md-column(12);
        }
    }

    &__template__col-2-1 {
        @include content-plugin-col-mobile-flexbox();
        @include content-plugin-col-mobile-flexbox-spacing-fix();
        .content-section__col {
            @include make-spacing-top-sm-max($content-section-col-stack-spacing-sm-max);
        }
        .content-section__col-1 {
            @include make-xs-column(24);
            @include make-md-column(12);
            @include make-lg-column(16);
        }
        .content-section__col-2 {
            @include make-xs-column(24);
            @include make-md-column(12);
            @include make-lg-column(8);
        }
    }

    &__template__col-1-2 {
        @include content-plugin-col-mobile-flexbox();
        @include content-plugin-col-mobile-flexbox-spacing-fix();
        .content-section__col {
            @include make-spacing-top-sm-max($content-section-col-stack-spacing-sm-max);
        }
        .content-section__col-1 {
            @include make-xs-column(24);
            @include make-md-column(12);
            @include make-lg-column(8);
        }
        .content-section__col-2 {
            @include make-xs-column(24);
            @include make-md-column(12);
            @include make-lg-column(16);
        }
    }

    &__template__col-3 {
        @include content-plugin-col-mobile-flexbox($flex-bp: $screen-xs-max);
        @include content-plugin-col-mobile-flexbox-spacing-fix($flex-bp: $screen-sm-max);
        .content-section__col {
            @include make-xs-column(24);
            @include make-sm-column(12);
            @include make-md-column(8);
            @include make-spacing-top-sm-max($content-section-col-stack-spacing-sm-max);
        }
    }

    &__template__col-4 {
        // equalizes the margin bottom of the columns
        @include content-plugin-stacked-col-container-negative-spacing();
        .content-section__col {
            // add margin bottom to all columns
            @include content-plugin-stacked-col-spacing();
            @include make-xs-column(24);
            @include make-sm-column(12);
            @media (min-width:$screen-sm) {
                &:nth-child(2n+1) { clear: left; }
            }
            @include make-md-column(6);
            @media (min-width:$screen-md) {
                &:nth-child(2n+1) { clear: none; }
                &:nth-child(4n+1) { clear: left; }
            }
        }
    }

    &__template__col-5 {
        // equalizes the margin bottom of the columns
        @include content-plugin-stacked-col-container-negative-spacing();
        .content-section__col {
            // add margin bottom to all columns
            @include content-plugin-stacked-col-spacing();
            @include make-xs-column(12);
            @media (min-width:$screen-xs) {
                &:nth-child(2n+1) { clear: left; }
            }
            @include make-sm-column(8);
            @media (min-width:$screen-sm) {
                &:nth-child(2n+1) { clear: none; }
                &:nth-child(3n+1) { clear: left; }
            }
            @include make-md-column(6);
            @media (min-width:$screen-md) {
                &:nth-child(3n+1) { clear: none; }
                &:nth-child(4n+1) { clear: left; }
            }
            @media (min-width:$screen-lg) {
                width: 20%;
                &:nth-child(4n+1) { clear: none; }
                &:nth-child(5n+1) { clear: left; }
            }
        }
    }

    &__template__col-6 {
        // equalizes the margin bottom of the columns
        @include content-plugin-stacked-col-container-negative-spacing();
        .content-section__col {
            // add margin bottom to all columns
            @include content-plugin-stacked-col-spacing();
            @include make-xs-column(12);
            @media (min-width:$screen-xs) {
                &:nth-child(2n+1) { clear: left; }
            }
            @include make-sm-column(8);
            @media (min-width:$screen-sm) {
                &:nth-child(2n+1) { clear: none; }
                &:nth-child(3n+1) { clear: left; }
            }
            @include make-md-column(4);
            @media (min-width:$screen-md) {
                &:nth-child(3n+1) { clear: none; }
                &:nth-child(6n+1) { clear: left; }
            }
            @include make-lg-column(4);
            @media (min-width:$screen-lg) {
                &:nth-child(3n+1) { clear: none; }
                &:nth-child(6n+1) { clear: left; }
            }
        }
    }

    // add smaller columns on XS (big ass selector, but we have to fight the specifcy war in order to avoid an !important). The only alternative would be to add this mixin to all columns, which wouldn't be pretty either.
    .content-section__main-col-container {
        .content-section__col-container {
            .content-section__col {
                @include column-padding-sm-max();
            }
        }
    }

}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

Section Headings

*/

// global section heading definitions
.content-section__section-heading-container {
    @include clearfix();
    // spacing to next element
    & + * {
        @include make-spacing-top-xs($content-section-heading-spacing-xs);
        @include make-spacing-top-md($content-section-heading-spacing-md);
        @include make-spacing-top-xl($content-section-heading-spacing-xl);
    }
}

.content-section__section-heading {
    // section heading of a 'content section' entry needs extra padding, because the columns themselves have the column-padding
    @include column-paddings();
    @include column-padding-sm-max();
    // default
    @include h1();
    // h1
    .section-heading-h1 & {
        @include h1();
    }
    // h2
    .section-heading-h2 & {
        @include h2();
    }
    // h3
    .section-heading-h3 & {
        @include h3();
    }
    // prevent the section heading from being too wide. make it 2/3
    @media (min-width:$screen-md) {
        max-width: 66.66%;
    }
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

manage-spacings: The default container for managing global spacings

This class doesn't do anything else than defining spacings between its
immediate children.

*/

.manage-spacings {
    & > * {
        @include make-spacing-top-xs($manage-spacings-container-xs);
        @include make-spacing-top-md($manage-spacings-container-md);
        @include make-spacing-top-xl($manage-spacings-container-xl);
        &:first-child {
            margin-top: 0;
        }
    }
}
